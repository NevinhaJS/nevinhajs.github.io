{"title":"NevinhaJs","githubRepo":"nevinhajs/nevinhajs.github.io","googleAnalytics":"UA-122807437-1","index":{"title":"Home","description":"A component framework for making web animations development easier.","content":" Featured Examples ","srcFilePath":"src/pages/index.soy","id":"pages","location":"/./","url":"/./","children":{"docs":{"title":"Documentation","description":"Everything you need to know to get started.","content":" NevinhaJs Docs Center Start learning how to leverage the power of . Choose a Guide Each one provide step by step coverage for every core feature. ","srcFilePath":"src/pages/docs/index.soy","id":"docs","location":"/docs/","url":"/docs/","children":{"search":{"title":"Search","description":"Find what you're looking for in the documentation.","hidden":true,"content":" Electric Docs Start learning how to leverage the power of . ","srcFilePath":"src/pages/docs/search.soy","id":"search","location":"/docs/search.html","url":"/docs/search.html"},"basics":{"children":{"creating-your-fisrt-component":{"title":"Your first component","description":"We've seen how to setup our project, now we'll see how to create our first component using NevinhaJs.","layout":"guide","icon":"arrow-right-rod","weight":1,"content":" {$page.description} Importing NevinhaJs NevinhaJS works following the architecture of components (lifecycles, states ands props), motions and providers. By default we exports NevinhaComponent, render, NevinhaDOM and ParallaxProvider. For starting to use, the basics exported variables that you'll need to import, are: import {NevinhaComponent, render, NevinhaDOM} from 'nevinha-js'; Where: NevinhaComponent: The component class that is responsible to render your component instance. Every NevinhaComponent instance has it own lifecycle and state methods. render: The render method responsable for rendering your component, basically it takes your component markup and send for the Nevinha Js virtual DOM algorithm NevinhaDOM The method that converts JSX syntaxe to javascript object literal language. Every JS file that uses JSX syntaxe, needs to import NevinhaDOM method. The App component As we said, create a nevinha component is so easy, all that you need is create a class extending NevinhaComponent class and parse your HTML markup in the render method. Let's see how it's in the code: app.js class App extends NevinhaComponent { render() { return ( Hello I'm a Nevinha component and I'm using the scaleBounce animation effect ); } } If you have already used any component library like React you are used to use JSX language and our lifecycles methods is so similar to React lifecycles. You can see more details about states and components lifecycle in the Lifecycles, states and props section. Problably you noticed that our App component is using a motion prop called scaleBounce, wich makes your element be animated with a scale effect. You can see more details about motions animation props in the Motions section. State-full and State-less components We also have state-full and state-less components as React has, our App Component for example, is a state-full component, and you also can have methods and markup logic inside it, like the example bellow: class App extends NevinhaComponent { constructor() { super(); this.handleKeyPress = this.handleKeyPress.bind(this); } handleKeyPress({target}) { this.setState({ name: target.value }); } render() { const {name} = this.state; return ( Hello! This is the new: {name ? name : 'NevinhaJS'} ); } } In this example above, we are using the constructor method to bind the App context into the handleKeyPress method (to avoid the inline bind in the JSX markup), as we aren't receiving props and children, we don't need to parse them in the super() call. In this example above, we are receiving a target object that contains a value of the inputed information in the Form component. When this information is typed, we updated the state with the new value, wich will triger the NevinhaJs Diff algorithm, and will or wont display the name that is compared in the render condition name ? name : 'NevinhaJS'. To create a state-less component, you just need to create a anonymous function returning a JSX syntaxe, like the example bellow: const someComponent = ({name}, children) = { return ( Hello, my name is {name} ); } The render method Now that we have our App component created, we just need to create a HTML file with the element wich will have our NevinhaJs application running and our render method. Let's create a very simple html file: After we created our HTML file, we can call the render method in the end of our App.js file: app.js const $root = document.querySelector('my-app'); render(App, $root); What's next? Now that you have completed the basics steps to create a simple NevinhaJs component, you can follow reading about Lifecycle, states and props ","srcFilePath":"src/pages/docs/basics/creating-your-fisrt-component.md","id":"creating-your-fisrt-component","location":"/docs/basics/creating-your-fisrt-component.html","url":"/docs/basics/creating-your-fisrt-component.html"}},"title":"Basics","description":"To start to use NevinhaJs in your project is very simple and easy, if you don't want to spend time configuring your project, checkout NevinhaJS Boirlaplate by clicking in the button bellow.","layout":"guide","icon":"arrow-right-rod","weight":1,"content":" What's NevinhaJs NevinhaJs is an inteligent javascript framework that helps developers to create components and motions in a very simple and fast way. {$page.description} NevinhaJS Boirlaplate Configuring Assuming that you already have your ES6 environment configured with babel (if you dont know how to configure a babel environment, you can download our NevinhaJS Boirlaplate â¬†), you just need to add in your package.json the nevinhajs through the command: yarn add nevinha-js if you don't have yarn, you can use the npm command: npm install nevinha-js We use JSX syntaxe by default, so you'll need to add the transform-react-jsx babel plugin to convert the JSX to javascript: yarn add -D babel-plugin-transform-react-jsx After that in your .babelrc file, you have to put the follow lines: \"plugins\": [ [ \"transform-react-jsx\", { \"pragma\": \"NevinhaDOM\" } ] ] What's next? Now you know how to setup NevinhaJs in your project, let's see how to create our first component. ","srcFilePath":"src/pages/docs/basics/index.md","id":"basics","location":"/docs/basics/","url":"/docs/basics/","childIds":["creating-your-fisrt-component"]},"lifecycle-state-props":{"title":"Lifecycle, state and props","description":"When we were creating NevinhaJs, we noticed that even being a framework animation based, we would need some thing to control our components animations states and references of our components tags DOM representations. The follow topics in this section, will show you how to do it.","layout":"guide","icon":"code-file","weight":2,"content":" {$page.description} State and how to update have the control of your components is primordial in any web application, knowing that, we have developed a very simple way to control and update your component state. You just need to call the setState() method to delete, update or add a new state: handleKeyPress(){ setState({ fooValue: 'foo' }) } In the example above, we are adding or updating the state of fooValue of our component when the handleKeyPress method is called. If the fooValue state is used in the render method of our component, this component will call the render method again, to update the HTML tag or the value that was changed. Now if you use this.state.fooValue in your component, you will get the new or the updated value of foo. You can also edit more than one state in the setState method, you just need to parse the object: value follow by , in the setState method. Props, context and children When you share values between components, we call it props, or if you are parsing a HTML markup by the component declaration, we call it children. A very simple way to parse props or children for some component is using a state-less component, for example: const WelcomeMessage = ({userName}, children) = { return ( Welcome MR. {userName} ) } class MyCompnoent extends NevinhaComponent { render() { return ( This component bellow shows a welcome message: ); } } You can also parse a HTML markup for your component and access it using the children paramiter const WelcomeMessage = ({userName}, children) = { return ( Welcome MR. {userName} These are my children: {children} ) } class MyCompnoent extends NevinhaComponent { render() { return ( This component bellow shows a welcome message: Github User: clovisdasilvaneto Age: 23 ); } } If you needs to have a state and props in your child component, you can use a state-full component, like bellow: class WelcomeMessage extends NevinhaComponent { constructor(props, children){ super(props, children); this.state.someState = 'NevinhaJS'; } render() { const {userName} = this.props; const {someState} = this.state; return ( Welcome MR. {userName} My state is: {someState} These are my children: {this.children} ) } } class MyCompnoent extends NevinhaComponent { render() { return ( This component bellow shows a welcome message: Github User: clovisdasilvaneto Age: 23 ); } } *ps: You don't need to call the constructor method to use props or children in your state-full component, but if you call the constructor method to initialize something like a state property, you will need to parse the props and the children as paramiters of your super() call.* Using refs Some times we want to manipulate some rendered node in our component without needs to select it by using querySelector or some related thing. In NevinhaJs it's possible using the ref attribute: class MyCompnoent extends NevinhaComponent { constructor(props, children){ super(props, children); this.handleClick = this.handleClick.bind(this); } handleClick(){ console.log(this.context.github.element); } render() { return ( Click and get the reference of the span bellow in your browser console Gtihub Username: clovisdasilvaneto ); } } Lifecycle Lifecycle is one thing that we are working to extend your component controll possibilities. At momment, we just have one lifecycle, wich is componentWillMount and it's called when your component will be attached on the DOM. We are finishing the following lifecycles: ComponentDidMount componentWillUnmount WillReceiveProps WillReceiveAnimation AnimationEnd We are so excited to finish that lifecycles and offer to you a better API to manipulate your animations. To use a lifecycle is very simple, you just need to create a method with the lifecycle name in your state-full component: class MyCompnoent extends NevinhaComponent { componentWillMount(){ console.log('The component will mount'); } render() { return ( Gtihub Username: clovisdasilvaneto ); } } ","srcFilePath":"src/pages/docs/lifecycle-state-props/index.md","id":"lifecycle-state-props","location":"/docs/lifecycle-state-props/","url":"/docs/lifecycle-state-props/"},"motions":{"children":{"etiam":{"title":"Etiam Cursus","description":"Quem num gosti di mum que vai caÃ§Ã¡ sua turmis! Quem manda na minha terra sou Euzis! Sapien in monti palavris qui num significa nadis i pareci latim. Copo furadis Ã© disculpa de bebadis, arcu quam euismod magna.","layout":"guide","weight":2,"content":" {$page.description} Lorem ipsum dolor sit amet Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Quisque varius mattis mollis. Praesent rutrum tempor libero sit amet blandit. Integer ante nisl, rutrum ut volutpat ut, rutrum id tortor. Duis placerat ut ipsum id aliquam. Nunc venenatis sem ac urna viverra, eu euismod sapien porttitor. body { overflow: hidden; } Nulla a suscipit nibh. Duis tincidunt elit tellus, ut volutpat lectus pharetra at. Nulla quis nisi ante. Maecenas vulputate convallis lorem. Vestibulum at ex id sapien faucibus vehicula. Sed porta dui in velit semper blandit. Ut in commodo magna. Morbi luctus enim et lectus luctus ullamcorper. Proin tellus erat, convallis vitae metus vitae, lacinia consectetur turpis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. ","srcFilePath":"src/pages/docs/motions/etiam.md","id":"etiam","location":"/docs/motions/etiam.html","url":"/docs/motions/etiam.html"},"lorem":{"title":"Lorem Ipsum","description":"Mais vale um bebadis conhecidiss, que um alcoolatra anonimiss. MÃ© faiz elementum girarzis, nisi eros vermeio. Suco de cevadiss deixa as pessoas mais interessantiss. Cevadis im ampola pa arma uma pindureta.","layout":"guide","weight":1,"content":" {$page.description} Lorem ipsum dolor sit amet Test, test, test Nam eu lobortis ipsum. Sed iaculis, lectus pharetra vehicula luctus, lacus sapien malesuada lacus, non convallis dui mauris a magna. Donec accumsan mi lorem, quis mollis sem tempor vel. Fusce iaculis facilisis accumsan. Sed tempus aliquam nisi, eget commodo quam sodales ut. Duis lacus velit, fringilla congue aliquet nec, vulputate vitae nulla. Aenean ultricies risus vel sapien tincidunt, nec hendrerit purus aliquam. Quisque varius accumsan condimentum. Aliquam erat volutpat. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. ","srcFilePath":"src/pages/docs/motions/lorem.md","id":"lorem","location":"/docs/motions/lorem.html","url":"/docs/motions/lorem.html"},"nula":{"title":"Nulla Eget","description":"Viva Forevis aptent taciti sociosqu ad litora torquent Nec orci ornare consequat. Praesent lacinia ultrices consectetur. Sed non ipsum felis. Pra lÃ¡ , depois divoltis porris, paradis. Delegadis gente finis, bibendum egestas augue arcu ut est.","layout":"guide","weight":3,"content":" {$page.description} Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. var oi = function() { console.log('Oi mundo'); }; Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. ","srcFilePath":"src/pages/docs/motions/nula.md","id":"nula","location":"/docs/motions/nula.html","url":"/docs/motions/nula.html"}},"title":"Motions","description":"Mussum Ipsum, cacilds vidis litro abertis. Paisis, filhis, espiritis santis. A ordem dos tratores nÃ£o altera o pÃ£o duris Praesent vel viverra nisi. Mauris aliquet nunc non turpis scelerisque, eget. Ta deprimidis, eu conheÃ§o uma cachacis que pode alegrar sua vidis.","layout":"guide","icon":"flash","weight":2,"content":" {$page.description} Lorem ipsum dolor sit amet Mauris iaculis, lectus sagittis consequat accumsan, tellus neque blandit justo, a consectetur odio turpis a magna. In ac euismod diam. Praesent non elementum turpis. Aliquam vitae vestibulum arcu. Praesent eleifend turpis arcu. var hi = function() { console.log('Hello, World!'); }; .hi:before { content: 'Hello, World'; } Nunc eros risus, scelerisque sit amet magna at, venenatis mattis metus. Pellentesque scelerisque facilisis sagittis. Integer at eleifend urna, nec vehicula nibh. Morbi a fermentum purus. Mauris augue erat, consectetur quis massa ac, commodo vehicula augue. Cras in odio volutpat, maximus nunc eleifend, scelerisque erat. In hac habitasse platea dictumst. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. ","srcFilePath":"src/pages/docs/motions/index.md","id":"motions","location":"/docs/motions/","url":"/docs/motions/","childIds":["lorem","etiam","nula"]},"providers":{"title":"Providers","description":"Sapien in monti palavris qui num significa nadis i pareci latim. in elementis mÃ© pra quem Ã© amistosis quis leo. Mais vale um bebadis conhecidiss, que um alcoolatra anonimiss. Ta deprimidis, eu conheÃ§o uma cachacis que pode alegrar sua vidis.","layout":"guide","icon":"database","weight":4,"content":" {$page.description} Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. alert('Hello World'); Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. ","srcFilePath":"src/pages/docs/providers/index.md","id":"providers","location":"/docs/providers/","url":"/docs/providers/"}},"childIds":["basics","lifecycle-state-props","motions","providers","search"]},"tutorials":{"title":"Tutorials","description":"Foo bar.","url":"/tutorials/example/first-step.html/","layout":false,"content":" ","srcFilePath":"src/pages/tutorials/index.soy","id":"tutorials","location":"/tutorials/","customURL":true,"children":{"example":{"children":{"first-step":{"title":"Step 1","description":"Foo bar.","buttonTitle":"I did step 1","parentId":"example","layout":"tutorial","time":90,"weight":1,"content":" {$page.title} var hello = function() { console.log('Hello, World!'); }; Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. ","srcFilePath":"src/pages/tutorials/example/first-step.md","id":"first-step","location":"/tutorials/example/first-step.html","url":"/tutorials/example/first-step.html"},"second-step":{"title":"Step 2","description":"Foo bar.","parentId":"example","layout":"tutorial","time":90,"weight":2,"content":" {$page.title} var hello = function() { console.log('Hello, World!'); }; Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum. Fusce eros metus, hendrerit ut egestas nec, sagittis id velit. ","srcFilePath":"src/pages/tutorials/example/second-step.md","id":"second-step","location":"/tutorials/example/second-step.html","url":"/tutorials/example/second-step.html"}},"title":"First Tutorial","description":"Foo bar.","tutorialTitle":"Getting started with your first tutorial","url":"/tutorials/example/first-step.html","layout":false,"content":" ","srcFilePath":"src/pages/tutorials/example/index.soy","id":"example","location":"/tutorials/example/","customURL":true,"childIds":["first-step","second-step"]}},"childIds":["example"]},"updates":{"title":"Updates","description":"Check out what's new","updates":[{"version":"1.0.0","major":true,"features":[{"icon":"hammer","title":"Awesome bugfixes","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum.","url":"/"},{"icon":"hammer","title":"Awesome enhancements","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum.","url":"/"}]},{"version":"2.0.4","major":false,"features":[{"icon":"hammer","title":"Awesome bugfixes","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum.","url":"/"},{"icon":"hammer","title":"Awesome enhancements","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum.","url":"/"},{"icon":"hammer","title":"Awesome enhancements","description":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur nulla libero, eleifend in euismod eget, fringilla id diam. Proin quis interdum ipsum.","url":"/"}]}],"content":" ","srcFilePath":"src/pages/updates/index.soy","id":"updates","location":"/updates/","url":"/updates/"}},"childIds":["docs","tutorials","updates"]}}